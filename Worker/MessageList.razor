@using System.Threading.Channels
@using Microsoft.AspNetCore.Components.Web

@implements IDisposable
@inject MessageListener MessageReader
@rendermode RenderMode.InteractiveServer

<h2>Messages</h2>

@if (messages is null)
{
    <p>Waiting for messages...</p>
}
else
{
    <ul>
        @foreach (var message in messages)
        {
            <li><pre>@message</pre></li>
        }
    </ul>
}

@code {
    List<string>? messages;
    IDisposable? subscription;

    protected override void OnInitialized()
    {
        subscription = MessageReader.Subscribe(async message =>
        {
            messages ??= [];

            messages.Add(message);

            await InvokeAsync(StateHasChanged);
        });
    }

    public void Dispose()
    {
        subscription?.Dispose();
    }
}
